// stdafx.h : include file for standard system include files,
// or project specific include files that are used frequently, but
// are changed infrequently
#pragma once

// TODO: reference additional headers your program requires here
/**
*	@brief Header files for the C++ utility library
*/


#include <cassert>
#include <utility>
#include <omp.h>
#include <Windows.h>
#include <stdlib.h>

/**
*	@brief Header files for the STL library
*/
#include <iostream>
#include <fstream>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <string>
#include <cmath>
#include <list>
#include <limits>
#include <algorithm>
#include <functional>
#include <numeric>
#include <random>
#include <sstream>
#include <strstream>
#include <exception>
#include <unordered_map>
#include <unordered_set>

using namespace std;

/**
*	@brief Header files for the OpenGL & Extension library
*/
#include <gl/glew.h>
#pragma comment( lib, "glew32.lib" )
#pragma message( "Link with glew32.lib" )
#include <freeglut/freeglut.h>
#pragma comment( lib, "freeglut.lib" )
#pragma message( "Link with freeglut.lib" )

/**
*	@brief Header files for OpenCV library 2.4.6
*/
/// Disable warnings generated by OpenCV
/// 'cv::XXXX' : function compiled as native
#pragma warning( disable:4793 )
#define STRINGIFY(x) #x
#define TOSTRING(x) STRINGIFY(x)
#define LIBFILE(x) x ".lib"
#define LIBdFILE(x) x "d.lib"
#include <OpenCV2\opencv.hpp>
#define OPENCV_VER 246
#define OPENCV_CORE "opencv_core" TOSTRING(OPENCV_VER)
#define OPENCV_IMGPROC "opencv_imgproc" TOSTRING(OPENCV_VER)
#define OPENCV_HIGHGUI "opencv_highgui" TOSTRING(OPENCV_VER)
#define OPENCV_VIDEO "opencv_video" TOSTRING(OPENCV_VER)
#define OPENCV_FEATURES2D "opencv_features2d" TOSTRING(OPENCV_VER)
#define OPENCV_OBJDETECT "opencv_objdetect" TOSTRING(OPENCV_VER)
#define OPENCV_ML "opencv_ml" TOSTRING(OPENCV_VER)
#define OPENCV_CALIB3D "opencv_calib3d" TOSTRING(OPENCV_VER)
#define OPENCV_CONTRIB "opencv_contrib" TOSTRING(OPENCV_VER)
#define OPENCV_LEGACY "opencv_legacy" TOSTRING(OPENCV_VER)
#define OPENCV_FLANN "opencv_flann" TOSTRING(OPENCV_VER)
#ifdef NDEBUG
#pragma comment( lib, LIBFILE(OPENCV_CORE))
#pragma message( "Link with " LIBFILE(OPENCV_CORE) )
#pragma comment( lib, LIBFILE(OPENCV_IMGPROC) )
#pragma message( "Link with " LIBFILE(OPENCV_IMGPROC) )
#pragma comment( lib, LIBFILE(OPENCV_HIGHGUI) )
#pragma message( "Link with " LIBFILE(OPENCV_HIGHGUI) )
#pragma comment( lib, LIBFILE(OPENCV_VIDEO) )
#pragma message( "Link with " LIBFILE(OPENCV_VIDEO) )
#pragma comment( lib, LIBFILE(OPENCV_FEATURES2D) )
#pragma message( "Link with " LIBFILE(OPENCV_FEATURES2D) )
#pragma comment( lib, LIBFILE(OPENCV_OBJDETECT) )
#pragma message( "Link with " LIBFILE(OPENCV_OBJDETECT) )
//#pragma comment( lib, LIBFILE(OPENCV_ML) )
//#pragma message( "Link with " LIBFILE(OPENCV_ML) )
//#pragma comment( lib, LIBFILE(OPENCV_CALIB3D) )
//#pragma message( "Link with " LIBFILE(OPENCV_CALIB3D) )
//#pragma comment( lib, LIBFILE(OPENCV_CONTRIB) )
//#pragma message( "Link with " LIBFILE(OPENCV_CONTRIB) )
//#pragma comment( lib, LIBFILE(OPENCV_LEGACY) )
//#pragma message( "Link with " LIBFILE(OPENCV_LEGACY) )
//#pragma comment( lib, LIBFILE(OPENCV_FLANN) )
//#pragma message( "Link with " LIBFILE(OPENCV_FLANN) )
#else
#pragma comment( lib, LIBdFILE(OPENCV_CORE))
#pragma message( "Link with " LIBdFILE(OPENCV_CORE) )
#pragma comment( lib, LIBdFILE(OPENCV_IMGPROC) )
#pragma message( "Link with " LIBdFILE(OPENCV_IMGPROC) )
#pragma comment( lib, LIBdFILE(OPENCV_HIGHGUI) )
#pragma message( "Link with " LIBdFILE(OPENCV_HIGHGUI) )
#pragma comment( lib, LIBdFILE(OPENCV_VIDEO) )
#pragma message( "Link with " LIBdFILE(OPENCV_VIDEO) )
#pragma comment( lib, LIBdFILE(OPENCV_FEATURES2D) )
#pragma message( "Link with " LIBdFILE(OPENCV_FEATURES2D) )
#pragma comment( lib, LIBdFILE(OPENCV_OBJDETECT) )
#pragma message( "Link with " LIBdFILE(OPENCV_OBJDETECT) )
//#pragma comment( lib, LIBdFILE(OPENCV_ML) )
//#pragma message( "Link with " LIBdFILE(OPENCV_ML) )
//#pragma comment( lib, LIBdFILE(OPENCV_CALIB3D) )
//#pragma message( "Link with " LIBdFILE(OPENCV_CALIB3D) )
//#pragma comment( lib, LIBdFILE(OPENCV_CONTRIB) )
//#pragma message( "Link with " LIBdFILE(OPENCV_CONTRIB) )
//#pragma comment( lib, LIBdFILE(OPENCV_LEGACY) )
//#pragma message( "Link with " LIBdFILE(OPENCV_LEGACY) )
//#pragma comment( lib, LIBdFILE(OPENCV_FLANN) )
//#pragma message( "Link with " LIBdFILE(OPENCV_FLANN) )
#endif

/**
*	@brief Header files for QR code generator Library
*/
#include "qrencode/qrencode.h"
#include "qrencode/qrspec.h"
// 
// #ifdef NDEBUG
// #pragma comment( lib, "qrencode/Lib/QREncode.lib" )
// #pragma message( "Link with QREncode.lib." )
// #else
// #pragma comment( lib, "qrencode/Lib/QREncoded.lib" )
// #pragma message( "Link with QREncoded.lib." )
// #endif

/**
*	@brief Header files for flowabs Library
*/
//#include <flowabsLIB.h>

/**
*	@brief Header files for Hung-Kuo's Media Library
*/
#include <HKMediaLIB.h>
using namespace HKMedia;

/**
*	@brief Header files for Hung-Kuo's Computer Vision Library
*/
#include <HKCV.h>
#include <GrabCut/HKGrabCut.h>
#include <EdgeLinking/HKEdgeLinking.h>

/**
*	@brief Header files for Hung-Kuo's Utility library
*/

#include <HKDotNetUtils.h>
#include <HKSTLUtils.h>
#include <HKSingleton.h>
#include <HKOGLProjector.h>
#include <HKColorTable.h>
#include <HKTimer.h>
/**
*	@brief zBar library
*/
#include "ZBar/qrdetector.h"
#pragma comment(lib,"ZBar/zBar.lib")

/**
*	@brief ZXing library
*/
#ifdef NDEBUG
#pragma comment(lib,"libzxing.lib")
#else
#pragma comment(lib,"libzxingd.lib")
#endif
/**
*	@brief Forward declaration
*/
#include "AppDeclare.h"

/**
*	@brief Global variables, functions and macros
*/
#include "AppGlobal.h"

#pragma comment(linker, "/subsystem:console /entry:WinMainCRTStartup")
#pragma warning( disable:4374 )